Capitulo 4
------------------------------------------------------------------------------
Metodos de Cadenas
-----------------------------------------------
let cadena = "cadena de prueba";
let cadena2 = " cadena 2";

resultado = cadena.concat(cadena2);

document.write(resultado)
-----------------------------------------------
startsWith() - si una cadena comienza con los caracteres de otra cadena, devuelve true, si no devuelve false

let cadena = "cadena de prueba";
let cadena2 = "cadena";

resultado = cadena.startsWith(cadena2);	// toda la 'cadena2' debe ser igual al iniciob de 'cadena', sin espacios ni nada, para que sea true de lo contrario sera false 

document.write(resultado)
-----------------------------------------------
endsWith() - si una cadena finaliza con los caracteres de otra cadena, devuelve true, si no devuelve false

let cadena = "cadena de prueba";
let cadena2 = "prueba";

resultado = cadena.endsWith(cadena2);	// es lo contrario al anterior, todo "cadena2" debe ser igual al final de "cadena" para que sea true, de lo contrario sera false

document.write(resultado)
-----------------------------------------------
includes() - si una cadena puede encontrarse dentro de otra cadena, devuelve true, sino devuelve false

let cadena = "cadena de prueba para probar includes";
let cadena2 = "de prueba para";

resultado = cadena.includes(cadena2);	// la cadena2 debe encontrarse en alguna parte de "cadena", como se encuentra entonces sera true si no fuera asi seria false

document.write(resultado)
----------------------------------------------
indexof() - devuelve el indice del primer caracter de la cadena, si no existe, devuelve -1

let cadena = "cadena de prueba para probar includes";
let cadena2 = "de prueba";

resultado = cadena.indexOf(cadena2);	// es igual al anterior, pero en vez de colocar "true", colocara "7" que es la posición donde comienza "cadena2", si no estuviera entonce seria "-1"

document.write(resultado)
document.write(cadena[3])				// de esta manera se colocara el caracter que este en la posicion 3 de "cadena", que seria la "e" de la palabra cadena, recordar que se inicia en 0
-----------------------------------------------
lastIndexof () - devuelve el ultimo indice del primer caracter de la cadena, si no existe, devuelve -1

let cadena = "cadena de prueba para probar y probar y probar y probar";
let cadena2 = "probar";

resultado = cadena.lastIndexOf(cadena2);	//es al contrario, busca "cadena2" que seria la palabra "probar" en "cadena", y devuelve "49" por es la posición de la ultima vez que aparece la palabra "probar"

document.write(resultado)					//al igual que el abnterior, si no existiera devolveria -1
-----------------------------------------------
padStart() - Rellenar cadena al principio con los caracteres deseados

let cadena = "abc";
let cadena2 = "";

resultado = cadena.padStart(6,2);	// en este caso resultado seria "222abc", se desean 6 caracteres y los que faltan los rellena con 222 al inicio
document.write(resultado)
-----------------------------------------------
padStart() - Rellenar cadena al principio con los caracteres deseados

let cadena = "abc";
let cadena2 = "";

resultado = cadena.padEnd(6,2);	// en este caso resultado seria "abc222", se desean 6 caracteres y los que faltan los rellena con 222 al final
document.write(resultado)
-----------------------------------------------
repeat() = Devuelve la misma cadena pero repetida la cantidad de veces que querramos 

let cadena = "12345 ";
let cadena2 = "";

resultado = cadena.repeat(3);	// devolverá 12345 12345 12345, se coloca un numero negativo saltara un error que dira "error de rango"
document.write(resultado)
-----------------------------------------------
split() - Divide la cadena como le pidamos

let cadena = "Hola,Como,estas ";
//let cadena2 = "";

resultado = cadena.split(",");	// divide la cadena en las comas "," y también se puede dividir en espacios "" depende de como este la cadena, si colocamos una palabra lo divide por la palabra
document.write(resultado[0])	//arroja Hola
document.write(resultado[1])	//arroja Como
document.write(resultado[2])	//arroja estas
-----------------------------------------------
substring() - Nos retorna un pedazo de la cadena que seleccionamos

let cadena = "Hola,Como,estas ";
//let cadena2 = "";

resultado = cadena.substring(2,5);		// crea una cadena extrayendo elementos de otra, devolverá "la," porque son los caracteres de la posición 2,3,4 recordar que ira hasta la posición que le indiquemos sin tomar dicha posición por lo que el carácter de la posición 5 que es "C" no aparecerá
document.write(resultado)
-----------------------------------------------
toLowerCase() - Convierte una cadena a minuscula

let cadena = "Hola Como estas ";
//let cadena2 = "";

resultado = cadena.toLowerCase();		// devuelve "hola como estas" sin mayúsculas
document.write(resultado)

-----------------------------------------------
toUpperCase() - Convierte una cadena a mayuscula

let cadena = "Hola Como estas ";
//let cadena2 = "";

resultado = cadena.toUpperCase();		// devuelve "HOLA COMO ESTAS" sin minúsculas
document.write(resultado)
-----------------------------------------------
toString() - Metodo devuelve una cadena que representa al objeto especificado, convierte el valor a cadena

let cadena = ["Pedro","Andres"];
//let cadena2 = "";

resultado = cadena.toString();		// devuelve "Pedro,Andres" como cadena y no como array
document.write(resultado)
document.write(resultado[0])		// si fuese array devolvería Pedro, pero al convertirlo en cadena devuelve la letra "P" que es la posición "0"
document.write(resultado[1])		//si fuese array devolvería Andres, pero al convertirlo en cadena devuelve la letra "e" que es la posición "1"
-----------------------------------------------
let cadena = "     Pedro      ";
//let cadena2 = "";

resultado = cadena.trim();			// devuelve "Pedro" sin sus espacios
document.write(resultado)			// por ser HTML no mostrara directamente los espacios
document.write(resultado.length)	// si usamos esta propiedad podemos ver la cantidad de caracteres, sin trim devolvería 16 pero con trim devuelve 5
-----------------------------------------------
trimEnd() - Elimina los espacios en blanco al final de una cadena

let cadena = "     Pedro      ";
//let cadena2 = "";

resultado = cadena.trimEnd();		// devuelve "Pedro" sin sus espacios al final
document.write(resultado)			// por ser HTML no mostrara directamente los espacios
document.write(resultado.length)	// si usamos esta propiedad podemos ver la cantidad de caracteres, sin trim devolvería 16 pero con trim devuelve 10
-----------------------------------------------
trimStart() - elimina los espacios en blanco al comienzo de una cadena

let cadena = "     Pedro      ";
//let cadena2 = "";

resultado = cadena.trimStart();		// devuelve "Pedro" sin sus espacios al inicio
document.write(resultado)			// por ser HTML no mostrara directamente los espacios
document.write(resultado.length)	// si usamos esta propiedad podemos ver la cantidad de caracteres, sin trim devolvería 16 pero con trim devuelve 11
-----------------------------------------------
valueof() - Retorna el valor primitivo de un objeto string
---------------------------------------------------------------------------------------------------------------------------------------------
Metodos de arrays
-----------------------------------------------Transformadores-----------------------------------------------
pop() - elimina el ultimo elemento de un array y lo devuelve

let nombres = ['pedro','maria','jorge'];	//array original

document.write(nombres + "<br>")			
let resultado = nombres.pop()				//esto saca el ultimo elemento que es jorge y lo guarda en resultado

document.write(resultado + '<br>');			//muestra el resultado que es el elemento que saco del array "nombres"

document.write(nombres)						//ahora el array "nombres" no tiene a jorge
-----------------------------------------------
shift() - elimina el primer elemento de un array y lo devuelve

let nombres = ['pedro','maria','jorge'];	//array original

document.write(nombres + "<br>")			
let resultado = nombres.shift()				//esto saca el primer elemento que es pedro y lo guarda en resultado

document.write(resultado + '<br>');			//muestra el resultado que es el elemento que saco del array "nombres"

document.write(nombres)						//ahora el array "nombres" no tiene a pedro
-----------------------------------------------
push() - agrega un elemento al array al final de la lista

let nombres = ['pedro','maria','jorge'];	//array original

document.write(nombres + "<br>")			
let resultado = nombres.push("juanes","Roberto")			

document.write(resultado + '<br>');			//devuelve 5 que es el numero de elementos

document.write(nombres)						//ahora nombres tiene a juanes y a Roberto
-----------------------------------------------
reverse() - invierte el orden de los elementos de un array

let nombres = ['pedro','maria','jorge'];	//array original

document.write(nombres + "<br>")			
let resultado = nombres.reverse()		// da vuelta a las variables del array

document.write(resultado + "<br>");     // botan jorge maria y pedro, resultado sera igual al array que se modifico
document.write(nombres);			    // botan jorge maria y pedro, resultado sera igual al array que se modifico
-----------------------------------------------
unshift() - agrega uno o mas elementos al inicio del array, y devuelve lan nueva longitud del array

let números = [1,2,3,4,5];

document.write(números + '<br>');   //muestra array original

números.unshift(0,0,0,0,0)          // nuevo array con los números añadidos, ahora es  0,0,0,0,0,1,2,3,4,5

document.write(números)
-----------------------------------------------
sort() - ordena los elementos de un arreglo (array) localmente y devuelve el arreglo ordenado

let números = ["d" , "f" , "e" , "q" , "H" , "k" , "r" , "z" , "b"];

document.write(números + '<br>');  

números.sort()                      //Ordena las letras alfabéticamente pero ordena primero las mayúsculas, también funciona con números

document.write(números)
-----------------------------------------------
splice() - cambia el contenido de un array eliminando elementos existentes y/o agregando nuevos elementos

let números = ["d" , "f" , "e" , "q" , "H" , "k" , "r" , "z" , "b"];

document.write(números + '<br>');  

números.splice(5,2,3,4,5,6,5,8,9)   //se ubica en la posición 5 (H) y las siguientes 2 posiciones (k,r) las remplaza por los números desde el 3 devolviendo d,f,e,q,H,3,4,5,6,5,8,9,z,b
									//si no se desea eliminar y solo añadir, el segundo termino debe ser cero (0) y si se desea añadir en sentido contrario las posiciones deben estar en negativo
document.write(números)
-----------------------------------------------Accesores-----------------------------------------------
join() - une todos los elementos de una matriz (u objeto similar) en una cadena y la devuelve

let números = ["dedo" , "fácil" , "eureka" , "queso" , "Hotel" , "kaka" , "ramo" , "zorro" , "beso"];

document.write(números + '<br>');  

resultado = números.join( " - ")  // ya no transforma números, convierte toda el array en un string y lo guarda en resultado separando cada elemento con un espacio y un guion " - "

document.write(resultado)       // arroja esta resultado dedo - fácil - eureka - queso - Hotel - kaka - ramo - zorro - beso
-----------------------------------------------
slice() - devuelve una parte del array dentro de un nuevo array empezando por inicio hasta el fin (fin no incluido)

let números = ["dedo" , "fácil" , "eureka" , "queso" , "Hotel" , "kaka" , "ramo" , "zorro" , "beso"];

document.write(números + '<br>');  

resultado = números.slice( 0 , 3)   //similar al substring, en este caso toma desde el elemento cero hasta el 3, sin tomar el tres pero sin modificar el array, si no queremos tomar nada dejamos cero y si queremos tomar los números del final usamos números negativos 

document.write(resultado)           // devuelve dedo,fácil,eureka   
-----------------------------------------------
Metodos ya vistos en cadenas: toString(), indexOf(), lastIndexOf(), includes() funcionan iguales que en las cadenas
-----------------------------------------------De Repeticion-----------------------------------------------
forEach() - ejecuta la funcion indicada una vez por cada elemento del array

let números = ["dedo" , "fácil" , "eureka" , "queso" , "Hotel" , "kaka" , "ramo" , "zorro" , "beso"];


números.forEach(numero=> document.write(numero + '<br>'))       //usando una función flecha por cada vuelta del bucle, numero valdrá cada uno de los elementos del array
                                                                //forEach recibe como paramentro una funcion y en este caso mostrara cada uno
-----------------------------------------------
filter() - crea un nuevo array con todos lso elementos que cumplan la condicion

let números = ["dedo" , "fácil" , "eureka" , "queso" , "Hotel" , "kaka" , "ramo" , "zorro" , "beso"];


resultado = números.filter(numero=> numero.length >4)   //similar al anterior pero este permite agregar condiciones
document.write(resultado)                               //en este caso numero valdrá todos los valores pero solo mostrara los que tengan mas de 4 caracteres que son: fácil,eureka,queso,Hotel,zorro
---------------------------------------------------------------------------------------------------------------------------------------------
objeto Math
-----------------------------------------------Metodos-----------------------------------------------
- sqrt() - Devuelve la raiz cuadrada positiva de un numero

numero = Math.sqrt(25)  //5

- cbrt() - Devuelve la raiz cubica de un numero

numero = Math.cbrt(27)  //3

- max() - Devuelve el mayor de cero o mas numeros

numero = Math.max(2,3,4,5,6,6,6,7,8,9,9,10,32,4)  //32

- min() - devuleve el mas pequeño de cero o mas numeros

numero = Math.min(2,3,4,5,6,6,6,7,8,9,9,10,32,4)  //2

- random() - Devuelve un numero pseudo-aleatorio entre 0 y 1

numero = Math.random();	//0.542164875 (numero random tenre 0 y 1 sin incluirlos)

- round() - Devuelve el valor de un numero redondeado al numero entero mas cercano

let numero = Math.random()*100;		//54.2164875 (se uso random para tomar un numero aleatorio, se multiplico por 100 para tener numero entero entre 0 y 100 por matematica los incluye)
numero = Math.round(numero)			//54 (con esto se elimina los decimales, si el decimal es menor 5, si fuese mayor devolveria 55)

- fround() - Devuelve la representacion flotante de precision simple mas cercana de un numero
- floor() - Devuelve el mayor entero menor que o igual a un numero

let numero = Mat.floor (4.9999)		//devuelve 4

ejemplo

for (var i =0; i < 100000; 1++){

	let numero = Math.random()*99;
	numero = Math.floor(numero+1);

	document.write(numero + "<br>")		//esto devulve numeros randonm entreo 0 y 99 con las mismas probabilidades
}

- trunc - Devuelve la parte entera del numero x, la eliminacion de los digitos fraccionarios

let numero = Math.trunc(9.7)		//no redondea, este elimina los decimales sin importar a cual se acerque, en este caso devuelve 9, si es 9.2 tambien seria 9
-----------------------------------------------Propiedades-----------------------------------------------
- PI - Ratio de la circunferencia de un circulo respecto a su diametro, aprocimadamente 3.14159
- SQRT1_2 - Raiz cuadrar de 1/2; Equivalentemente, 1 sobre la raiz cuadrada de 2, aproximadamenteo 0.707
- SQRT2 - Raiz cuadrada de 2, aproximadamente 1.414

- E - constante de Eules, la base de los algoritmos naturales, aproximadamente 2.71828
- LN2 - Logaritmo natural de 2, aproximadamente 0.693
- LN10 - Logaritmo natural de 10, aprocimadamente 1.303
- LOG2E - Logaritmo de E con base 2, aprocimadamente 1.443
- LOG10E - Logaritmo de E con base 10, aprocimadamente 0.434
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Ejercicio 4
----------------------------------------------
A) Cofla ya esta terminando el primer semestre del primer ciclo, la tarea que le debe realizar es mucho mas avanzada de la que tenia antes, ademas de suma, resta, multiplicacion y division
ahora tambien necesitara calcular potencias, raices cuadradas y cubicas

	CREAR SOLUCIONES:

	- Perfeccionar calculadora para poder Implementar las nuevas funciones

b) La facultad de cofla esta por comenzar y ya las 12 materias de la carrera tienen asignado un profesor y todos los alumnos que se anotaron en dichas clases, pero necesitamos ver esto
mas ordenadamente

	CREAR SOLUCIONES
	
	- Crear una funcion que al pasarle como parametro la materia nos devuelva
		*Proferos asignado
		*El nombre de todos los alumnos
	
	- Crear funcion que nos diga en cuantas clases esta cofla
	- Nombrar las clases en las que esta y los profesores de cada una
C) Cofla ya vio las 12 materias y se decidio en cual se va a inscribir asi que en tres dias lo hara, el problema es que se rompio el sistema de inscripciones

	CREAR SOLUCIONES

	- Crear una funcion para pregutarle a cofla en que materia se quiere inscribir
	- Si ya hay 20 alumnos anotados en la materia negarle la inscripcio
	- Si hay menos de 20 alumnos inscribir a cofla y añadirlo a la lista de alumnos